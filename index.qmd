---
title: "index"
author: "Liz Loutrage"
format: 
  html:
    self-contained: false
    code-fold: true
editor: source
theme: minty
keep-md: true
execute:
  warning: false
  message : false
toc: true
toc-title: Sections
toc-location: left
page-layout: full
---

# 1. Relationships between size distribution and depth

## Community level
- Bigger fish at depth? 
```{r}
#| echo: true
#| fig-height: 8
#| fig-width: 7
#| label: size_depth_community

#Library
library(tidyr)
library(dplyr)
library(ggplot2)

# Catch data EHVOE 2002-2019 ----
data_evhoe2002_2019 <- utils::read.csv(here::here("data", "trawling_data_evhoe_2002_2019.csv"), sep = ";", header = T,dec = ".")

# prepare data for EVHOE 2002-20219
size_data_2002_2019 <- data_evhoe2002_2019%>%
  # divide by 10 when size in mm and not cm 
  mutate(size= case_when(Unite_Taille =="mm" ~Taille/10,
                         Unite_Taille =="cm" ~Taille))%>%
  select(Code_Station, Nom_Scientifique, Annee, size, Nbr, trawling_depth)%>%
  na.omit()%>%
  # selection of species of interest (also sampled for isotopy)
  filter(Nom_Scientifique%in% c("Stomias boa",
                                "Lampanyctus crocodilus",
                                "Myctophum punctatum",
                                "Aphanopus carbo",
                                "Melanostigma atlanticum",
                                "Serrivomer beanii",
                                "Argyropelecus olfersii",
                                "Lampanyctus macdonaldi",
                                "Searsia koefoedi",
                                "Notoscopelus kroyeri",
                                "Xenodermichthys copei",
                                "Arctozenus risso"))%>%
  tidyr::uncount(Nbr)

# Catch data EHVOE 2002-2019 ----
data_evhoe_2021 <- utils::read.csv(here::here("data", "trawling_data_evhoe_2021.csv"), sep = ";", header = T,dec = ".")

# prepare data for EVHOE 2021
size_data_2021 <- data_evhoe_2021%>%
  # divide by 10 when size in mm and not cm 
  mutate(size= case_when(Unite_Taille =="mm" ~Taille/10,
                         Unite_Taille =="cm" ~Taille))%>%
  select(Code_Station, Nom_Scientifique, Annee, size, Nbr)%>%
  na.omit()%>%
  # selection of mesopelagic trawls 
  filter(Code_Station%in% c("Z0524", "Z0518", "Z0512", "Z0508", 
                            "Z0503", "Z0497", "Z0492"))%>%
  # selection of species of interest (also sampled for isotopy)
  filter(Nom_Scientifique%in% c("Stomias boa",
                                "Lampanyctus crocodilus",
                                "Myctophum punctatum",
                                "Aphanopus carbo",
                                "Melanostigma atlanticum",
                                "Serrivomer beanii",
                                "Argyropelecus olfersii",
                                "Lampanyctus macdonaldi",
                                "Searsia koefoedi",
                                "Notoscopelus kroyeri",
                                "Xenodermichthys copei",
                                "Arctozenus risso"))%>%
  tidyr::uncount(Nbr)%>%
  # assign depth to a station 
  mutate(trawling_depth= case_when(Code_Station %in% c("Z0508") ~25,
                                   Code_Station %in% c("Z0492") ~370,
                                   Code_Station%in% c("Z0512") ~555,
                                   Code_Station %in% c("Z0503") ~715,
                                   Code_Station %in% c("Z0518") ~1000,
                                   Code_Station %in% c("Z0524") ~1010,
                                   Code_Station %in% c("Z0497") ~1335))
  
# merge dataframes 
trawling_dataset <- rbind(size_data_2002_2019, size_data_2021)%>%
  # add column with depth layer (cf 1st paper)
  mutate(depth_layer= case_when(between(trawling_depth, 0, 174) ~"Epipelagic",
                               between(trawling_depth, 175, 699)~"Upper mesopelagic",
                               between(trawling_depth, 700, 999)~"Lower mesopelagic",
                               between(trawling_depth, 1000, 2000)~"Bathypelagic"))%>%
  mutate(across(depth_layer, factor, levels = c("Epipelagic", "Upper mesopelagic",
                                                "Lower mesopelagic", "Bathypelagic")))%>%
  rename("species"="Nom_Scientifique")
 
# median size in each depth layer 
median_size_data <- trawling_dataset%>%
  group_by(depth_layer)%>%
  summarise(median_size =median(size))%>%
  mutate(across(depth_layer, factor, levels = c("Epipelagic", "Upper mesopelagic",
                                                "Lower mesopelagic", "Bathypelagic")))

ggplot(trawling_dataset, aes(x=size)) +
  geom_density(alpha=0.5, linewidth=0.6, bw=0.2, aes(col=depth_layer, fill= depth_layer))+
  scale_fill_manual(values = c("#93C3FF", "#6799D3","#3A72A8", "#002A58"))+
  scale_color_manual(values = c("#93C3FF", "#6799D3","#3A72A8", "#002A58"))+
  facet_wrap(~depth_layer, ncol=1, scales = "free_y") +
  theme_minimal()+
  scale_x_continuous(trans = 'log2') +
  theme(strip.text.x = element_text(size=9,face="bold"),
        strip.text.y = element_text(size=9),
        axis.title = element_text(size=9),
        axis.text =  element_text(size=9, color= "grey50"),
        panel.background=element_rect(color="white"),
        plot.background = element_rect(color = "white"),
        legend.title = element_text(size=9),
        legend.text = element_text(size=9))+
  guides(fill="none",col="none")+
  xlab("Log2 total length (cm)")+
  geom_vline(data =median_size_data, aes(xintercept = median_size, color=depth_layer),
             linewidth=0.6, linetype="dashed")

#store the plot in the "figures" file in high resolution 
ggsave("density_plot_community.png", path = "figures", dpi = 700, height = 6, width = 6)
```

### Linear relationship
```{r}
#| echo: true
#| label: size_depth_community_lm

broom::tidy(lm(size~trawling_depth, data = trawling_dataset))
```

## Species level
### Linear relationships
```{r}
#| echo: true
#| label: size_depth_species_lm

linar_regression_size_depth_sp <- trawling_dataset %>%
  group_by(species)%>%
  do(broom::tidy(lm(size~trawling_depth, .)))

htmltools::tagList(DT::datatable(linar_regression_size_depth_sp))
```

### Density plot for significant relationships 
```{r}
#| echo: true
#| fig-height: 10
#| fig-width: 13
#| label: size_depth_species

# selection of species with a significant size-depth relationship 
trawling_dataset_significant <- filter(trawling_dataset, 
                                    species %in% c("Lampanyctus crocodilus","Melanostigma atlanticum",
                                                   "Xenodermichthys copei","Myctophum punctatum"))

trawling_dataset_significant$species <- factor(trawling_dataset_significant$species,
                                    levels = c("Lampanyctus crocodilus",
                                             "Melanostigma atlanticum",
                                             "Xenodermichthys copei",
                                             "Myctophum punctatum"))
    

median_size_species <- trawling_dataset_significant%>%
  group_by(species, depth_layer)%>%
  summarise(median_size_sp= median(size))

ggplot(trawling_dataset_significant, aes(x=size)) +
  geom_density(alpha=0.3, linewidth=0.5, adjust= 2, aes(fill= depth_layer, col= depth_layer))+
  scale_fill_manual(values = c("#93C3FF", "#6799D3","#3A72A8", "#002A58"))+
  scale_color_manual(values = c("#93C3FF", "#6799D3","#3A72A8", "#002A58"))+
  facet_grid(depth_layer~species, scale="free")+
  theme_minimal()+
  theme(strip.text.x = element_text(size=12,face="italic"),
        strip.text.y = element_text(size=11),
        axis.title = element_text(size=13),
        axis.text =  element_text(size=10, color= "grey50"),
        panel.background=element_rect(color="white"),
        plot.background = element_rect(color = "white"),
        legend.title = element_text(size=10),
        legend.text = element_text(size=10))+
  guides(fill="none",col="none")+
  xlab("Total length (cm)")+
  geom_vline(data =median_size_species, aes(xintercept = median_size_sp, color=depth_layer), 
             linewidth=0.6, linetype="dashed")

#store the plot in the "figures" file in high resolution 
ggsave("density_plot_species.png", path = "figures", dpi = 700, height = 7, width = 9)
```


# 2. $\delta$<sup>15</sup>N-size relationships

## At community level
```{r}
#| echo: true
#| label: d15n_size_community

ontogeny_data <- utils::read.csv(here::here("data", "ontogeny_isotopy_data.csv"), sep = ";", header = T,dec = ",")%>%
  mutate(species= gsub("_"," ", species))

ggplot(ontogeny_data , aes(x=size, y=d15N_muscle_untreated))+
  geom_point (alpha=0.4, size=1) + 
  geom_smooth(method=lm, se=T, alpha=0.2, col= alpha("darkblue",0.7)) + 
  ggpmisc::stat_poly_eq(formula = y ~ x, 
                        aes(label = paste(..eq.label.., ..rr.label.., ..p.value.label.. 
                                          , ..n.label..,sep = "*`,`~")),
                        parse = TRUE,
                        size=4,
                        label.x.npc = "right",
                        label.y.npc = "bottom",
                        vstep = -0.0005)+ 
  scale_x_continuous(trans = 'log2') +
  xlab(bquote(Log[2]~"standard length (cm)"))+
  ylab(expression({delta}^15*N~'\u2030'))+
  ylim(c(7, 14))+
  guides(fill="none")+
  theme_minimal()+
  theme(strip.text.x = element_text(size=12,face="italic"),
        axis.title = element_text(size=12),
        axis.text =  element_text(size=12),
        plot.background = element_rect(colour = "white"))

#store the plot in the "figures" file in high resolution 
ggsave("d15n_size_community.png", path = "figures", dpi = 700)
```


## At species level
### Data summary
```{r}
#| echo: true
#| warning: false
#| label: range_size_sp 

data_sum <- ontogeny_data%>%
  group_by(species)%>%
  summarise(range_size= max(size)-min(size),
            min_size=min(size),
            max_size=max(size),
            mean_size=mean(size),
            mean_d15n=mean(d15N_muscle_untreated),
            range_depth= max(trawling_depth)- min(trawling_depth))%>%
   mutate(across(where(is.numeric), round, 2))

htmltools::tagList(DT::datatable(data_sum))
```

-  __A__: significant relationships 
-  __B__: non-significant relationships 
-  __Coefficient of variation__: The dispersion of the $\delta$<sup>15</sup>N values is not the same between the species having shown non-significant $\delta$<sup>15</sup>N-size relationships: *X. copei* presents a strong dispersion of its values (CV = 6.57) contrary to the values of *N. kroyeri* which remain relatively stable with the size of its individuals (CV = 2.15)
-   Do these differences translate into differences in their feeding strategies?

### Linear relationships 
```{r}
#| echo: true
#| warning: false
#| fig-height: 15
#| fig-width: 10
#| label: d15_size_species

# Selection of species presenting significant d15N-size relationship
ontogeny_significant <- filter(ontogeny_data,
                               species %in% c("Lampanyctus crocodilus", "Aphanopus carbo",
                                              "Melanostigma atlanticum", "Serrivomer beanii",
                                              "Stomias boa", "Myctophum punctatum","Arctozenus risso"))
# Order species
ontogeny_significant$species <- factor(ontogeny_significant$species,
                               levels = c("Myctophum punctatum",
                                          "Melanostigma atlanticum",
                                          "Lampanyctus crocodilus",
                                          "Stomias boa",
                                          "Serrivomer beanii",
                                          "Aphanopus carbo",
                                          "Arctozenus risso"))

plot_significant <- ggplot(ontogeny_significant, aes(x=size, y=d15N_muscle_untreated))+
  geom_point (alpha=0.4, col="black") + 
  geom_smooth(method=lm, se=T, alpha=0.2, col= alpha("darkblue",0.7)) +
  facet_wrap(~species, scale="free_x", ncol=3)+ 
  ggpmisc::stat_poly_eq(formula = y ~ x, 
                        aes(label = paste(..eq.label.., ..rr.label.., ..p.value.label.. 
                                          , ..n.label..,sep = "*`,`~")),
                        parse = TRUE,
                        size=3.38,
                        label.x.npc = "right",
                        label.y.npc = "bottom",
                        vstep = -0.0005)+ 
  xlab("")+
  ylab(expression({delta}^15*N~'\u2030'))+
  ylim(c(7,13))+
  guides(color="none", fill="none")+
  theme_minimal()+
  theme(strip.text.x = element_text(size=15,face="italic"),
        plot.background = element_rect(colour = "white"),
        axis.title = element_text(size=14),
        axis.text =  element_text(size=13))

# Selection of species presenting non-significant d15N-size relationship
ontogeny_non_significant <- filter(ontogeny_data,
                                   species %in% c("Argyropelecus olfersii", "Lampanyctus macdonaldi",
                                                  "Searsia koefoedi", "Notoscopelus kroyeri",
                                                  "Xenodermichthys copei"))

#order species 
ontogeny_non_significant$species <- factor(ontogeny_non_significant$species,
                                           levels = c("Xenodermichthys copei",
                                                      "Searsia koefoedi",
                                                      "Argyropelecus olfersii",
                                                      "Lampanyctus macdonaldi",
                                                      "Notoscopelus kroyeri"))

# function to calculate coefficient of variation 
cv <- function(x){
  (sd(x)/mean(x))*100
}
coeff_var <- aggregate(d15N_muscle_untreated ~ species, 
                       data = ontogeny_non_significant,
                       FUN = cv)
coeff_var$d15N_muscle_untreated <-round(coeff_var$d15N_muscle_untreated, digits = 2)


plot_non_significant <- ggplot(ontogeny_non_significant, aes(x=size, y=d15N_muscle_untreated))+
  geom_point (alpha=0.4, col="black") + 
  facet_wrap(~species, scale="free_x", ncol=3, nrow = 3)+ 
  ggpmisc::stat_poly_eq(formula = y ~ x, 
                        aes(label = paste( ..n.label..,sep = "*`,`~")),
                        parse = TRUE,
                        size=4,
                        label.x.npc = "right",
                        label.y.npc = "bottom",
                        vstep = -0.0005)+ 
  xlab("Standard Length (cm)")+
  ylab(expression({delta}^15*N~'\u2030'))+
  ylim(c(7, 14))+
  guides(color="none", fill="none")+
  theme_minimal()+
  theme(strip.text.x = element_text(size=15,face="italic"),
        axis.title = element_text(size=14),
        plot.background = element_rect(colour = "white"),
        axis.text =  element_text(size=13))+
  geom_text(coeff_var, mapping = aes(x = -Inf, y = -Inf, label = paste("CV = ", d15N_muscle_untreated, sep = "")),
            hjust = -0.2, vjust = -0.8, size = 4)

# Combine the two plot 
ggpubr::ggarrange(plot_significant, plot_non_significant, ncol=1, labels = c("A", "B"),
                  heights = c(2, 1.25))

#store the plot in the "figures" file in high resolution 
ggsave("d15n_size_sp.png", path = "figures", dpi = 700, height = 13, width = 10)
```


# 3. Variation partitionning

-   At the species level, is it the sampling depth or the size of the individuals that most influences the values in $\delta$<sup>15</sup>N?
-  To test the significance of the influence of each variable (depth and size) on \(\delta\)$^{15}$N values an ANOVA-type permutation test was performed for each model (anova.cca function)
-  Since the third fraction (depth and size) is not the result of an RDA, it cannot be tested for significance.

```{r}
#| echo: true
#| warning: false
#| label: varpart

# S. boa and A. carbo not considered in these analyses due to small depth range
varpart_data <- ontogeny_data%>%
  filter(!species%in%c("Stomias boa", "Aphanopus carbo"))

# List of species names
species_list <- unique(varpart_data$species)

# Initialize an empty list to store the results
result_list <- list()

# Initialize an empty data frame to store indfract values (variance explained by each variable)
indfract_df <- data.frame(species = character(0), indfract = numeric(0), variable=character(0))

# Loop through each species
for (species_name in species_list) {
  
  # Filter the data for the current species
  species_data <- varpart_data %>%
    filter(species == species_name)
  
  # Perform variation partitioning analysis
  species_part <- vegan::varpart(species_data$d15N_muscle_untreated,
                                 ~trawling_depth, ~size, data = species_data)
  
  # Create the specified plot for the current species
  plot <- plot(species_part,
               Xnames = c("Depth", "size"), # name the partitions
               bg = c("#072AC8", "#0B5345"), alpha = 100, # colour the circles
               digits = 2, # only show 2 digits
               cex = 1.4)
  
  # Add a title to the plot
  title(main = paste("Variation Partitioning for", species_name))
  
  # Perform the significance testing
  rda1 <- vegan::rda(species_data$d15N_muscle_untreated, species_data$trawling_depth, species_data$size)
  rda2 <- vegan::rda(species_data$d15N_muscle_untreated, species_data$size, species_data$trawling_depth)
  anova1 <- vegan::anova.cca(rda1)
  anova2 <- vegan::anova.cca(rda2)
  
  # Store the results, the plot, and the significance testing in the list
  result_list[[species_name]] <- list(varpart_results = species_part, varpart_plot = plot,
                                      anova_depth_size = anova1, anova_size_depth = anova2)
  
  # Extract and store the indfract value (variance explained by each variable) in the data frame
  indfract_value <- species_part$part$indfract$Adj.R.squared
  indfract_df <- rbind(indfract_df, data.frame(species = species_name, indfract = indfract_value,
                                               variable=c("Depth only", "Size only", "Depth and size", "Residuals")))
  
  # Print the plot
  print(plot)
  
  # Print the significance testing results
  cat("ANOVA (Depth-Size):\n")
  print(anova1)
  
  cat("ANOVA (Size-Depth):\n")
  print(anova2)
  
  cat("\n")
}
```

## Variance partitionning summary 
- compile information on a single plot for all species 
```{r}
#| echo: true
#| warning: false
#| label: varpart_plot
#| fig-width: 9

#order according to the variance explained by each species 
indfract_df$species <- factor(indfract_df$species,
                                        levels = c("Notoscopelus kroyeri",
                                                   "Searsia koefoedi",
                                                   "Lampanyctus macdonaldi",
                                                   "Xenodermichthys copei",
                                                   "Arctozenus risso",
                                                   "Argyropelecus olfersii",
                                                   "Serrivomer beanii", 
                                                   "Melanostigma atlanticum",
                                                   "Myctophum punctatum",
                                                   "Lampanyctus crocodilus"))

# Percentage of variance for each variable + residuals 
var_freq <- indfract_df %>%
  group_by(species) %>%
  mutate(freq = ((indfract*100)/sum(indfract)))

# Order variable
var_freq$variable <- factor(var_freq$variable,
                            levels=c("Residuals","Depth only","Depth and size","Size only"))


# Stacked + percent
ggplot(var_freq , aes(fill=variable, y=freq, x=species)) + 
  geom_bar(position="stack", stat="identity", alpha=0.6, linewidth=0.5)+
  scale_fill_manual(values = c("#33505C","#861D31","#D8973C"))+
  theme_light()+
  coord_flip()+
  ylim(c(0,40))+
  ylab("Percentage variance (%)")+
  xlab("")+
  theme(axis.text.y = element_text(face ="italic", size=11),
        axis.title = element_text(size=11),
        legend.text = element_text(size=11),
        legend.title = element_text(size=11),
        axis.text.x = element_text(size=11))+
  guides(fill=guide_legend(title="Explanatory variables"),
         color="none")

#store the plot in the "figures" file in high resolution 
ggsave("variations_coeff.png", path = "figures", dpi = 700, width = 8, height = 5)
```


# 4. Appendices
## Test of temporal variability on $\delta$<sup>15</sup>N values
```{r}
#| echo: true
#| warning: false 
#| fig-height: 10
#| fig-width: 15
#| label: temporal_variability

ontogeny_data$years <- as.character(ontogeny_data$years)

col_years <- c("#FFC75F", "#F3C5FF", "#845EC2", "#C34A36", "#3596B5", "grey")
ggplot(ontogeny_data , aes(x=size, y=d15N_muscle_untreated))+
  geom_point (alpha=0.9, aes(col=years), size=2.2) + 
  scale_color_manual(values = col_years)+
  facet_wrap(~species, scale="free_x", ncol=3)+ 
  xlab("Standard Length (cm)")+
  ylab(expression({delta}^15*N~'\u2030'))+
  theme_light()+
  labs(col= "Sampling Years")+
  theme(strip.text.x = element_text(size=15,face="italic"),
        axis.title = element_text(size=14),
        axis.text =  element_text(size=14),
        legend.title = element_text(size=14),
        legend.text = element_text(size=14),
        panel.background = element_rect(fill = "white",colour = "white"),
        plot.background = element_rect(fill = "white",colour = "white"))

#store the plot in the "figures" file in high resolution 
ggsave("years_sampling.png", path = "figures", dpi = 700, height = 10, width = 11)
```

## Representativeness of sample sizes between the two data sets 
- In order to compare the sizes of the species in the two data sets, a conversion from standard size to total size was carried out using conversion equations estimated in the laboratory by Tiphaine Chouvelon. 
```{r}
#| echo: true
#| warning: false 
#| fig-height: 10
#| fig-width: 15
#| label: data_set

ontogeny_data_TL <- ontogeny_data%>%
  # conversion standard length in total length (equations Tiphaine)
  mutate(total_length = case_when(species=="Aphanopus carbo" & size<85~size+3,
                                  species=="Aphanopus carbo" & size>85~size+5,
                                  species=="Arctozenus risso" ~size+1,
                                  species=="Argyropelecus olfersii"~ (size+0.7913)/0.9039,
                                  species=="Lampanyctus crocodilus"~ (size+0.4754)/0.8284,
                                  species=="Lampanyctus macdonaldi"~ (size+0.4754)/0.8284,
                                  species=="Melanostigma atlanticum"~size,
                                  species=="Myctophum punctatum"~(size-1.0381)/0.7373,
                                  species=="Notoscopelus kroyeri"~ (size+0.2406)/0.8903,
                                  species=="Searsia koefoedi"~(size-0.7343)/0.8593,
                                  species=="Serrivomer beanii"~(size+0.6654)/1.0053,
                                  species=="Stomias boa"~(size+0.2633)/0.9679,
                                  species=="Xenodermichthys copei"~(size+0.0631)/0.9266))%>%
  select(species, total_length)%>%
  mutate(data_set="isotopic dataset")%>%
  rename("size"="total_length")

trawling_dataset_comparaison <- trawling_dataset%>%
  select(species, size)%>%
  mutate(data_set="trawling dataset")

# merge the two data frame
size_comparaison <- rbind(trawling_dataset_comparaison,ontogeny_data_TL)

ggplot(size_comparaison, aes(x=size)) +
  geom_density(alpha=0.3, linewidth=0.7, aes(col=data_set, fill= data_set))+
  scale_color_manual(values = c("#3596B5", "#B0A8B9"), labels = c("Isotopic dataset", "Trawling dataset"))+
  scale_fill_manual(values = c("#3596B5", "#B0A8B9"), labels = c("Isotopic dataset", "Trawling dataset"))+
  facet_wrap(~species, scale="free", ncol=3)+
  theme_minimal()+
  theme(strip.text.x = element_text(size=16,face="italic"),
        axis.title = element_text(size=16),
        axis.text =  element_text(size=16),
        legend.title = element_text(size=16),
        legend.text = element_text(size=16),
        panel.background = element_rect(fill = "white",colour = "white"),
        plot.background = element_rect(fill = "white",colour = "white"))+
  xlab("Standard length (cm)")+
  guides(fill=guide_legend(title="Dataset"), col=guide_legend(title="Dataset"))

#store the plot in the "figures" file in high resolution 
ggsave("dataset.png", path = "figures", dpi = 700, width = 12, height = 9)
```

## Non-significant size-depth relationships at species level
```{r}
#| echo: true
#| warning: false 
#| fig-height: 10
#| fig-width: 16
#| label: size_depth_ns

# Selection of non-significant size-depth relationships
trawling_dataset_ns <- filter(trawling_dataset, species %in% c("Arctozenus risso", 
                                                               "Lampanyctus macdonaldi",
                                                         "Notoscopelus kroyeri", "Searsia koefoedi",
                                                         "Serrivomer beanii","Argyropelecus olfersii",
                                                         "Stomias boa boa", "Aphanopus carbo"))

trawling_dataset_ns$species <- factor(trawling_dataset_ns$species,
                            levels=c("Notoscopelus kroyeri", "Serrivomer beanii", 
                                     "Stomias boa boa","Argyropelecus olfersii",
                                     "Arctozenus risso", "Searsia koefoedi",
                                     "Aphanopus carbo", "Lampanyctus macdonaldi"),
                            labels = c("N. kroyeri", "S. beanii", 
                                     "S. boa","A. olfersii",
                                     "A. risso", "S. koefoedi",
                                     "A. carbo", "L.macdonaldi"))

# Density plot 
median_size_sp_ns <- trawling_dataset_ns%>%
  group_by(depth_layer, species)%>%
  summarise(median_size =median(size))


ggplot(trawling_dataset_ns, aes(x=size)) +
  geom_density(alpha=0.3, linewidth=0.8, adjust= 2, aes(fill= depth_layer, col= depth_layer))+
  scale_fill_manual(values = c("#93C3FF", "#6799D3","#3A72A8", "#002A58"))+
  scale_color_manual(values = c("#93C3FF", "#6799D3","#3A72A8", "#002A58"))+
  facet_grid(depth_layer~species, scale="free")+
  theme_minimal()+
  theme(strip.text.x = element_text(size=15.5, face="italic"),
        strip.text.y = element_text(size=16),
        axis.title = element_text(size=19),
        axis.text =  element_text(size=14, color= "grey50"),
        panel.background=element_rect(color="white"),
        plot.background = element_rect(fill = "white",colour = "white"),
        legend.title = element_text(size=19),
        legend.text = element_text(size=17))+
  guides(fill="none",col="none")+
  xlab("Total Length (cm)")+
  geom_vline(data =median_size_sp_ns, aes(xintercept = median_size, color=depth_layer),
             linewidth=0.6, linetype="dashed")

#store the plot in the "figures" file in high resolution 
ggsave("depth_size_all.png", path = "figures", dpi = 700, width = 12, height = 9)
```

